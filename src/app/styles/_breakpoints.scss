$small: 320px;
$medium: 460px; 
$large:  983px; 
$very-large:  1483px; 


$breakpoints: (

  'small':  $small,
  'medium': $medium,
  'large':  $large,
  'very-large':  $very-large,

) !default;

$breakpoints-only: (

  'small':  $small,
  'medium-only': $medium,
  'large-only':  $large,

) !default;


/// Mixin to manage responsive breakpoints
/// @author Hugo Giraudel
/// @param {String} $breakpoint - Breakpoint name
/// @require $breakpoints
@mixin respond-to($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  }
 
  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}

@mixin respond-to-below($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media (max-width: map-get($breakpoints, $breakpoint) - 1) {
      @content;
    }
  }
 
  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}


@mixin respond-to-between($breakpoint1, $breakpoint2) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint1) and map-has-key($breakpoints, $breakpoint2){
    // Prints a media query based on the value
    @media (min-width: map-get($breakpoints, $breakpoint1)) and(max-width: map-get($breakpoints, $breakpoint2) - 1) {
      @content;
    }
  }
 
  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint1}` or `#{$breakpoint2}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}
